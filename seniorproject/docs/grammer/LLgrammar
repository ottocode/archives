translation-unit
	external-declaration
	external-declaration translation-unit
external-declaration
	function-definition
	declaration
function-definition
	declarator compound-statement
	declaration-specifiers declarator compound-statement
	declarator declaration-list compound-statement
	declaration-specifiers declarator declaration-list compound-statement
declaration
	declaration-specifiers /;
	declaration-specifiers init-declarator-list /;
declaration-list
	declaration
	declaration declaration-list
declaration-specifiers
	storage-class-specifier
	storage-class-specifier declaration-specifiers
	type-specifier
	type-specifier declaration-specifiers
	type-qualifier
	type-qualifier declaration-specifiers
storage-class-specifier
	/auto
	/register
	/static
	/extern
	/typedef
type-specifier
	/void
	/char
	/short
	/int
	/long
	/float
	/double
	/signed
	/unsigned
	struct-or-union-specifier
	enum-specifier
	typedef-name
type-qualifier
	/const
	/volatile
struct-or-union-specifier
	strict-or-union /{ struct-declaration-list /}
	strict-or-union /identifier /{ struct-declaration-list /}
	struct-or-union /identifier
struct-or-union
	/struct
	/union
struct-declaration-list
	struct-declaration
	struct-declaration struct-declaration-list
init-declarator-list
	init-declarator
	init-declarator /, init-declarator-list
init-declarator
	declarator
	declarator /= initializer
struct-declaration
	specifier-qualifier-list struct-declarator-list /;
specifier-qualifier-list
	/void
	/char
	/short
	/int
	/long
	/float
	/double
	/signed
	/unsigned
	strict-or-union /{ struct-declaration-list /}
	strict-or-union /identifier /{ struct-declaration-list /}
	/struct /identifier
	/union /identifier
	enum-specifier
	typedef-name
	/void specifier-qualifier-list
	/char specifier-qualifier-list
	/short specifier-qualifier-list
	/int specifier-qualifier-list
	/long specifier-qualifier-list
	/float specifier-qualifier-list
	/double specifier-qualifier-list
	/signed specifier-qualifier-list
	/unsigned specifier-qualifier-list
	strict-or-union /{ struct-declaration-list /} specifier-qualifier-list
	strict-or-union /identifier /{ struct-declaration-list /} specifier-qualifier-list
	enum-specifier specifier-qualifier-list
	typedef-name specifier-qualifier-list
	/const
	/volatile
	/const specifier-qualifier-list
	/volatile specifier-qualifier-list
struct-declarator-list
	struct-declarator
	struct-declarator /, struct-declarator-list
struct-declarator
	declarator
	/: constant-expression
	declarator /: constant-expression
enum-specifier
	/enum /{ enumerator-list /}
	/enum /identifier /{ enumerator-list /}
	/enum /identifier
enumerator-list
	enumerator
	enumerator /, enumerator-list
enumerator
	/identifier
	/identifier /= constant-expression
declarator
	direct-declarator
	pointer direct-declarator
direct-declarator
	/identifier
	/( declarator /)
	/[ /] direct-declarator
	/[ constant-expression /] direct-declarator
	/( parameter-type-list /) direct-declarator
	/( /) direct-declarator
	/( identifier-list /) direct-declarator
pointer
	/*
	/* type-qualifier-list
	/* pointer
	/* type-qualifier-list pointer
type-qualifier-list
	/const
	/volatile
	/const tyep-qualifier-list
	/volatile tyep-qualifier-list
parameter-type-list
	parameter-list
	parameter-list /, /...
parameter-list
	parameter-declaration
	parameter-declaration /, parameter-list
parameter-declaration
	/auto declarator
	/register declarator
	/static declarator
	/extern declarator
	/typedef declarator
	/auto declaration-specifiers
	/register declaration-specifiers
	/static declaration-specifiers
	/extern declaration-specifiers
	/typedef declaration-specifiers
	/void declarator
	/char declarator
	/short declarator
	/int declarator
	/long declarator
	/float declarator
	/double declarator
	/signed declarator
	/unsigned declarator
	strict-or-union /{ struct-declaration-list /} declarator
	strict-or-union /identifier /{ struct-declaration-list /} declarator
	/struct /identifier
	/union /identifier
	/enum /{ enumerator-list /} declarator
	/enum /identifier /{ enumerator-list /} declarator
	/enum /identifier declarator
	typedef-name declarator
	/void declaration-specifiers
	/char declaration-specifiers
	/short declaration-specifiers
	/int declaration-specifiers
	/long declaration-specifiers
	/float declaration-specifiers
	/double declaration-specifiers
	/signed declaration-specifiers
	/unsigned declaration-specifiers
	strict-or-union /{ struct-declaration-list /} declaration-specifiers
	strict-or-union /identifier /{ struct-declaration-list /} declaration-specifiers
	/enum /{ enumerator-list /} declaration-specifiers
	/enum /identifier /{ enumerator-list /} declaration-specifiers
	/enum /identifier declaration-specifiers
	typedef-name declaration-specifiers
	/const declarator
	/volatile declarator
	/const declaration-specifiers
	/volatile declaration-specifiers
	/auto
	/register
	/static
	/extern
	/typedef
	/void
	/char
	/short
	/int
	/long
	/float
	/double
	/signed
	/unsigned
	strict-or-union /{ struct-declaration-list /}
	strict-or-union /identifier /{ struct-declaration-list /}
	/enum /{ enumerator-list /}
	/enum /identifier /{ enumerator-list /}
	/enum /identifier
	typedef-name
	/const
	/volatile
	/auto abstract-declarator
	/register abstract-declarator
	/static abstract-declarator
	/extern abstract-declarator
	/typedef abstract-declarator
	/void abstract-declarator
	/char abstract-declarator
	/short abstract-declarator
	/int abstract-declarator
	/long abstract-declarator
	/float abstract-declarator
	/double abstract-declarator
	/signed abstract-declarator
	/unsigned abstract-declarator
	strict-or-union /{ struct-declaration-list /} abstract-declarator
	strict-or-union /identifier /{ struct-declaration-list /} abstract-declarator
	/enum /{ enumerator-list /} abstract-declarator
	/enum /identifier /{ enumerator-list /} abstract-declarator
	/enum /identifier abstract-declarator
	typedef-name abstract-declarator
	/const abstract-declarator
	/volatile abstract-declarator
identifier-list
	/identifier
	/identifier /, identifier-list
initializer
	assignment-expression
	/{ initializer-list /}
	/{ initializer-list /, /}
initializer-list
	initializer
	initializer /, initializer-list
type-name
	/void
	/char
	/short
	/int
	/long
	/float
	/double
	/signed
	/unsigned
	strict-or-union /{ struct-declaration-list /}
	strict-or-union /identifier /{ struct-declaration-list /}
	/struct /identifier
	/union /identifier
	/enum /{ enumerator-list /}
	/enum /identifier /{ enumerator-list /}
	/enum /identifier
	typedef-name
	/void specifier-qualifier-list
	/char specifier-qualifier-list
	/short specifier-qualifier-list
	/int specifier-qualifier-list
	/long specifier-qualifier-list
	/float specifier-qualifier-list
	/double specifier-qualifier-list
	/signed specifier-qualifier-list
	/unsigned specifier-qualifier-list
	strict-or-union /{ struct-declaration-list /} specifier-qualifier-list
	strict-or-union /identifier /{ struct-declaration-list /} specifier-qualifier-list
	/enum /{ enumerator-list /} specifier-qualifier-list
	/enum /identifier /{ enumerator-list /} specifier-qualifier-list
	/enum /identifier specifier-qualifier-list
	typedef-name specifier-qualifier-list
	/const
	/volatile
	/const specifier-qualifier-list
	/volatile specifier-qualifier-list
	/void abstract-declarator
	/char abstract-declarator
	/short abstract-declarator
	/int abstract-declarator
	/long abstract-declarator
	/float abstract-declarator
	/double abstract-declarator
	/signed abstract-declarator
	/unsigned abstract-declarator
	strict-or-union /{ struct-declaration-list /} abstract-declarator
	strict-or-union /identifier /{ struct-declaration-list /} abstract-declarator
	/struct /identifier abstract-declarator
	/union /identifier abstract-declarator
	/enum /{ enumerator-list /} abstract-declarator
	/enum /identifier /{ enumerator-list /} abstract-declarator
	/enum /identifier abstract-declarator
	typedef-name abstract-declarator
	/void specifier-qualifier-list abstract-declarator
	/char specifier-qualifier-list abstract-declarator
	/short specifier-qualifier-list abstract-declarator
	/int specifier-qualifier-list abstract-declarator
	/long specifier-qualifier-list abstract-declarator
	/float specifier-qualifier-list abstract-declarator
	/double specifier-qualifier-list abstract-declarator
	/signed specifier-qualifier-list abstract-declarator
	/unsigned specifier-qualifier-list abstract-declarator
	strict-or-union /{ struct-declaration-list /} specifier-qualifier-list abstract-declarator
	strict-or-union /identifier /{ struct-declaration-list /} specifier-qualifier-list abstract-declarator
	typedef-name specifier-qualifier-list abstract-declarator
	/const abstract-declarator
	/volatile abstract-declarator
	/const specifier-qualifier-list abstract-declarator
	/volatile specifier-qualifier-list abstract-declarator
abstract-declarator
	/*
	/* type-qualifier-list
	/* pointer
	/* type-qualifier-list pointer
	direct-abstract-declarator
	/* direct-abstract-declarator
	/* type-qualifier-list direct-abstract-declarator
	/* pointer direct-abstract-declarator
	/* type-qualifier-list pointer direct-abstract-declarator
direct-abstract-declarator
	/( abstract-declarator /) direct-abstract-declarator1 direct-abstract-declarator2 direct-abstract-declarator3 direct-abstract-declarator4
	/[ /] direct-abstract-declarator1 direct-abstract-declarator2 direct-abstract-declarator3 direct-abstract-declarator4
	/[ constant-expression /] direct-abstract-declarator1 direct-abstract-declarator2 direct-abstract-declarator3 direct-abstract-declarator4
	/( /) direct-abstract-declarator1 direct-abstract-declarator2 direct-abstract-declarator3 direct-abstract-declarator4
	/( parameter-type-list /) direct-abstract-declarator1 direct-abstract-declarator2 direct-abstract-declarator3 direct-abstract-declarator4
typedef-name
	/identifier
statement
	labeled-statement
	expression-statement
	compoind-statement
	selection-statement
	iteration-statement
	jump-statement
labeled-statement
	/identifier /: statement
	/case constant-expression /: statement
	/default /: statement
expression-statement
	/;
	expression /;
compound-statement
	/{ /}
	/{ declaration-list /}
	/{ statement-list /}
	/{ declaration-list statement-list /}
statement-list
	/identifier /: statement
	/case constant-expression /: statement
	/default /: statement
	/;
	expression /;
	compoind-statement
	selection-statement
	iteration-statement
	jump-statement
	/identifier /: statement statement-list
	/case constant-expression /: statement statement-list
	/default /: statement statement-list
	/; statement-list
	expression /; statement-list
	compoind-statement statement-list
	selection-statement statement-list
	iteration-statement statement-list
	jump-statement statement-list
selection-statement
	/if /( expression /) statement
	/if /( expression /) statement /else statement
	/switch /( expression /) statement
iteration-statement
	/while /( expression /) statement
	/do statement /while /( expression /) statement /;
	/for /( /; /; /) statement
	/for /( expression /; /; /) statement
	/for /( expression /; expression /; /) statement
	/for /( expression /; /; expression /) statement
	/for /( /; expression /; /) statement
	/for /( /; expression /; expression /) statement
	/for /( /; /; expression /) statement
	/for /( expression /; expression /; expression /) statement
jump-statement
	/goto /identifier /;
	/continue /;
	/break /;
	/return /;
	/return expression /;
expression
	assignment-expression
	assignment-expression /, expression
assignment-expression
	conditional-expression
	unary-expression assignment-operator assignment-expression
assignment-operator
	/=
	/*-
	//=
	/%=
	/+=
	/-=
	/<<=
	/>>=
	/&=
	/^=
	/|=
conditional-expression
	logical-or-expression
	logical-or-expression /? expression /: conditional-expression
constant-expression
	conditional-expression
logical-or-expression
	logical-and-expression
	logical-and-expression /|| logical-or-expression
logical-and-expression
	inclusive-or-expression
	inclusive-or-expression /&& logical-and-expression
inclusive-or-expression
	exclusive-or-expression
	exclusive-or-expression /| inclusive-or-expression
exclusive-or-expression
	and-expression
	and-expression /^ exclusive-or-expression
and-expression
	equality-expression
	equality-expression /& and-expression
equality-expression
	relational-expression
	relational-expression /== equality-expression
	relational-expression /!= equality-expression
relational-expression
	shift-expression
	shift-expression /< relational-expression
	shift-expression /> relational-expression
	shift-expression />= relational-expression
	shift-expression /<= relational-expression
shift-expression
	additive-expression
	additive-expression /<< shift-expression
	additive-expression />> shift-expression
additive-expression
	multiplicative-expression
	multiplicative-expression /+ additive-expression
	multiplicative-expression /- additive-expression
multiplicative-expression
	cast-expression
	cast-expression /* multiplicative-expression
	cast-expression // multiplicative-expression
	cast-expression /% multiplicative-expression
cast-expression
	unary-expression
	/( type-name /) cast-expression
unary-expression
	post-fix-expression
	/++ unary-expression
	/-- unary-expression
	unary-operator cast-expression
	/sizeof unary-expression
	/sizeof /( type-name /)
unary-operator
	/&
	/*
	/+
	/-
	/~
	/|
postfix-expression
	primary-expression
	primary-expression postfix-expressionL
postfix-expressionL
	/[ expression /] postfix-expressionL
	/( argument-expression-list /) postfix-expressionL
	/( /) postfix-expressionL
	/. /identifier postfix-expressionL
	/-> /identifier postfix-expressionL
	/++ postfix-expressionL
	/-- postfix-expressionL
	/
prinary-expression
	/identifier
	/constant
	/string
	/( expression /)
argument-expression-list
	post-fix-expression
	/++ unary-expression
	/-- unary-expression
	/& cast-expression
	/* cast-expression
	/+ cast-expression
	/- cast-expression
	/~ cast-expression
	/| cast-expression
	/sizeof unary-expression
	/sizeof /( type-name /)
	/( type-name /) cast-expression
	post-fix-expression /*
	/++ unary-expression /*
	/-- unary-expression /*
	/sizeof unary-expression /*
	/sizeof /( type-name /) /*
	/( type-name /) cast-expression /*
	post-fix-expression //
	/++ unary-expression //
	/-- unary-expression //
	/sizeof unary-expression //
	/sizeof /( type-name /) //
	/( type-name /) cast-expression //
	post-fix-expression /%
	/++ unary-expression /%
	/-- unary-expression /%
	/sizeof unary-expression /%
	/sizeof /( type-name /) /%
	/( type-name /) cast-expression /%
	post-fix-expression /+
	/++ unary-expression /+
	/-- unary-expression /+
	/sizeof unary-expression /+
	/sizeof /( type-name /) /+
	/( type-name /) cast-expression /+
	post-fix-expression /-
	/++ unary-expression /-
	/-- unary-expression /-
	/sizeof unary-expression /-
	/sizeof /( type-name /) /-
	/( type-name /) cast-expression /-
	post-fix-expression /<<
	/++ unary-expression /<<
	/-- unary-expression /<<
	/sizeof unary-expression /<<
	/sizeof /( type-name /) /<<
	/( type-name /) cast-expression /<<
	post-fix-expression />>
	/++ unary-expression />>
	/-- unary-expression />>
	/sizeof unary-expression />>
	/sizeof /( type-name /) />>
	/( type-name /) cast-expression />>
	post-fix-expression /<
	/++ unary-expression /<
	/-- unary-expression /<
	/sizeof unary-expression /<
	/sizeof /( type-name /) /<
	/( type-name /) cast-expression /<
	post-fix-expression />
	/++ unary-expression />
	/-- unary-expression />
	/sizeof unary-expression />
	/sizeof /( type-name /) />
	/( type-name /) cast-expression />
	post-fix-expression />=
	/++ unary-expression />=
	/-- unary-expression />=
	/sizeof unary-expression />=
	/sizeof /( type-name /) />=
	/( type-name /) cast-expression />=
	post-fix-expression /<=
	/++ unary-expression /<=
	/-- unary-expression /<=
	/sizeof unary-expression /<=
	/sizeof /( type-name /) /<=
	/( type-name /) cast-expression /<=
	post-fix-expression /==
	/++ unary-expression /==
	/-- unary-expression /==
	/sizeof unary-expression /==
	/sizeof /( type-name /) /==
	/( type-name /) cast-expression /==
	post-fix-expression /!=
	/++ unary-expression /!=
	/-- unary-expression /!=
	/sizeof unary-expression /!=
	/sizeof /( type-name /) /!=
	/( type-name /) cast-expression /!=
	post-fix-expression /&
	/++ unary-expression /&
	/-- unary-expression /&
	/sizeof unary-expression /&
	/sizeof /( type-name /) /&
	/( type-name /) cast-expression /&
	post-fix-expression /^
	/++ unary-expression /^
	/-- unary-expression /^
	/sizeof unary-expression /^
	/sizeof /( type-name /) /^
	/( type-name /) cast-expression /^
	post-fix-expression /|
	/++ unary-expression /|
	/-- unary-expression /|
	/sizeof unary-expression /|
	/sizeof /( type-name /) /|
	/( type-name /) cast-expression /|
	post-fix-expression /&&
	/++ unary-expression /&&
	/-- unary-expression /&&
	/sizeof unary-expression /&&
	/sizeof /( type-name /) /&&
	/( type-name /) cast-expression /&&
	post-fix-expression /||
	/++ unary-expression /||
	/-- unary-expression /||
	/sizeof unary-expression /||
	/sizeof /( type-name /) /||
	/( type-name /) cast-expression /||
	post-fix-expression /?
	/++ unary-expression /?
	/-- unary-expression /?
	/sizeof unary-expression /?
	/sizeof /( type-name /) /?
	/( type-name /) cast-expression /?
	post-fix-expression assignment-operator
	/++ unary-expression assignment-operator
	/-- unary-expression assignment-operator
	/sizeof unary-expression assignment-operator
	/sizeof /( type-name /) assignment-operator
	post-fix-expression /,
	/++ unary-expression /,
	/-- unary-expression /,
	/sizeof unary-expression /,
	/sizeof /( type-name /) /,
	/( type-name /) cast-expression /,
constant
	integer-constant
	character-constant
	floating-constant
	enumeration-constant
direct-abstract-declarator1
	/[ /] direct-abstract-declarator1
	
direct-abstract-declarator2
	/[ constant-expression /] direct-abstract-declarator1 direct-abstract-declarator2
	
direct-abstract-declarator3
	/( /) direct-abstract-declarator1 direct-abstract-declarator2 direct-abstract-declarator3
	
direct-abstract-declarator4
	/( parameter-type-list /) direct-abstract-declarator1 direct-abstract-declarator2 direct-abstract-declarator3 direct-abstract-declarator4
