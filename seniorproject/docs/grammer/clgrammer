translation-unit
    external-declaration
    external-declaration translation-unit

external-declaration
    function-definition
    declaration

function-definition
    declarator compound-statement
    declaration-specifiers declarator compound-statement
    declarator declaration-list compound-statement
    declaration-specifiers declarator declaration-list compound-statement

declaration
    declaration-specifiers /;
    declaration-specifiers init-declarator-list /;

declaration-list
    declaration
    declaration declaration-list 

declaration-specifiers
    storage-class-specifier 
    storage-class-specifier declaration-specifiers
    type-specifier 
    type-specifier declaration-specifiers
    type-qualifier
    type-qualifier declaration-specifiers

storage-class-specifier
    /auto
    /register
    /static
    /extern
    /typedef

type-specifier
    /void
    /char
    /short
    /int
    /long
    /float
    /double
    /signed
    /unsigned
    struct-or-union-specifier
    enum-specifier
    typedef-name

type-qualifier
    /const
    /volatile

struct-or-union-specifier
    strict-or-union /{ struct-declaration-list /}
    strict-or-union /identifier /{ struct-declaration-list /}
    struct-or-union /identifier

struct-or-union
    /struct
    /union

struct-declaration-list
    struct-declaration
    struct-declaration struct-declaration-list 

init-declarator-list
    init-declarator
    init-declarator /, init-declarator-list

init-declarator
    declarator
    declarator /= initializer

struct-declaration
    specifier-qualifier-list struct-declarator-list /;

specifier-qualifier-list
    type-specifier 
    type-specifier specifier-qualifier-list 
    type-qualifier 
    type-qualifier specifier-qualifier-list 

struct-declarator-list
    struct-declarator
    struct-declarator /, struct-declarator-list

struct-declarator
    declarator
    /: constant-expression
    declarator /: constant-expression

enum-specifier
    /enum /{ enumerator-list /}
    /enum /identifier /{ enumerator-list /}
    /enum /identifier

enumerator-list
    enumerator
    enumerator /, enumerator-list

enumerator
    /identifier
    /identifier /= constant-expression

declarator
    direct-declarator
    pointer direct-declarator

direct-declarator
    /identifier
    /( declarator /)
    /[ /] direct-declarator 
    /[ constant-expression /] direct-declarator 
    /( parameter-type-list /) direct-declarator 
    /( /) direct-declarator 
    /( identifier-list /) direct-declarator 

pointer
    /* 
    /* type-qualifier-list
    /* pointer
    /* type-qualifier-list pointer

type-qualifier-list
    type-qualifier
    type-qualifier tyep-qualifier-list 

parameter-type-list
    parameter-list
    parameter-list /, /...

parameter-list
    parameter-declaration
    parameter-declaration /, parameter-list

parameter-declaration
    declaration-specifiers declarator
    declaration-specifiers
    declaration-specifiers abstract-declarator

identifier-list
    /identifier
    /identifier /, identifier-list

initializer
    assignment-expression
    /{ initializer-list /}
    /{ initializer-list /, /}

initializer-list
    initializer
    initializer /, initializer-list

type-name
    specifier-qualifier-list 
    specifier-qualifier-list abstract-declarator

abstract-declarator
    pointer
    direct-abstract-declarator
    pointer direct-abstract-declarator

direct-abstract-declarator
    /( abstract-declarator /)
    /[ /]
    direct-abstract-declarator /[ /]
    /[ constant-expression /]
    direct-abstract-declarator /[ constant-expression /]
    /( /)
    direct-abstract-declarator /( /)
    /( parameter-type-list /)
    direct-abstract-declarator /( parameter-type-list /)

typedef-name
    /identifier

statement
    labeled-statement
    expression-statement
    compoind-statement
    selection-statement
    iteration-statement
    jump-statement

labeled-statement
    /identifier /: statement
    /case constant-expression /: statement
    /default /: statement

expression-statement
    /;
    expression /;

compound-statement
    /{ /}
    /{ declaration-list /}
    /{ statement-list /}
    /{ declaration-list statement-list /}

statement-list
    statement
    statement statement-list 

selection-statement
    /if /( expression /) statement
    /if /( expression /) statement /else statement
    /switch /( expression /) statement

iteration-statement
    /while /( expression /) statement 
    /do statement /while /( expression /) statement /;
    /for /( /; /; /) statement
    /for /( expression /; /; /) statement
    /for /( expression /; expression /; /) statement
    /for /( expression /; /; expression /) statement
    /for /( /; expression /; /) statement
    /for /( /; expression /; expression /) statement
    /for /( /; /; expression /) statement
    /for /( expression /; expression /; expression /) statement

jump-statement
    /goto /identifier /;
    /continue /;
    /break /;
    /return /;
    /return expression /;

expression
    assignment-expression
    assignment-expression /, expression

assignment-expression
    conditional-expression
    unary-expression assignment-operator assignment-expression

assignment-operator
    /=
    /*-
    //=
    /%=
    /+=
    /-=
    /<<=
    />>=
    /&=
    /^=
    /|=

conditional-expression
    logical-or-expression
    logical-or-expression /? expression /: conditional-expression

constant-expression
    conditional-expression

logical-or-expression
    logical-and-expression
    logical-and-expression /|| logical-or-expression

logical-and-expression
    inclusive-or-expression
    inclusive-or-expression /&& logical-and-expression 

inclusive-or-expression
    exclusive-or-expression
    exclusive-or-expression /| inclusive-or-expression 

exclusive-or-expression
    and-expression
    and-expression /^ exclusive-or-expression 

and-expression
    equality-expression
    equality-expression /& and-expression 
    
equality-expression
    relational-expression
    relational-expression /== equality-expression 
    relational-expression /!= equality-expression 

relational-expression
    shift-expression
    shift-expression /< relational-expression
    shift-expression /> relational-expression
    shift-expression />= relational-expression
    shift-expression /<= relational-expression

shift-expression
    additive-expression
    additive-expression /<< shift-expression
    additive-expression />> shift-expression

additive-expression
    multiplicative-expression
    multiplicative-expression /+ additive-expression
    multiplicative-expression /- additive-expression

multiplicative-expression
    cast-expression
    cast-expression /* multiplicative-expression
    cast-expression // multiplicative-expression
    cast-expression /% multiplicative-expression

cast-expression
    unary-expression
    /( type-name /) cast-expression

unary-expression
    post-fix-expression
    /++ unary-expression
    /-- unary-expression
    unary-operator cast-expression
    /sizeof unary-expression
    /sizeof /( type-name /)

unary-operator
    /&
    /*
    /+
    /-
    /~
    /|

postfix-expression
    primary-expression
    primary-expression postfix-expressionL

postfix-expressionL
    /[ expression /] postfix-expressionL 
    /( argument-expression-list /) postfix-expressionL 
    /( /) postfix-expressionL 
    /. /identifier postfix-expressionL 
    /-> /identifier postfix-expressionL 
    /++ postfix-expressionL 
    /-- postfix-expressionL 
    /

prinary-expression
    /identifier
    /constant
    /string
    /( expression /)

argument-expression-list
    assignment-expression
    assignment-expression /, argument-expression-list

constant
    integer-constant
    character-constant
    floating-constant
    enumeration-constant

